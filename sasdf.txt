#include <vector>

class MyType
{
public:
    MyType(std::vector<int> const& x, std::vector<int> const& y)
    {
        addr_x = &x;
        addr_y = &y;
        //...
    }
    MyType(MyType&&)
    {
        
    }
    ~MyType()
    {
        if (x->length() == y->length())
            free(myself);
    }

private:
    void* addr_x;
    void* addr_y;
};


read_only byte arena[1024];

void dump_to_file(byte const*, int n)
{
    ...
}

std::vector<int>
func(int b)
{
    static const std::vector<int> x = { 10, 20, 30 };
    static const std::vector<int> y = { 1, 2, 3 };

    if (b == 1)
        return x;
    else
        return y;
};